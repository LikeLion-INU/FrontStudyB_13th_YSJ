{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostWritePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n_c2 = Container;\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;\n\n// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props) {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"// \\uC2E4\\uC81C \\uD654\\uBA74\\uC5D0 \\uB098\\uD0C0\\uB098\\uB294 \\uBD80\\uBD84\\uC740 textInput \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uAE00\\uC758 \\uC81C\\uBAA9\\uACFC \\uB0B4\\uC6A9\\uC744 \\uAC01\\uAC01 \\uC785\\uB825\\uBC1B\\uC744 \\uC218 \\uC788\\uB3C4\\uB85D \\uAD6C\\uD604\", /*#__PURE__*/_jsxDEV(TextInput, {\n        height: 20,\n        value: title,\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        height: 480,\n        value: content,\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), \"// \\uD654\\uBA74 \\uD558\\uB2E8\\uC5D0\\uB294 \\uBC84\\uD2BC \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C \\uAE00 \\uC791\\uC131\\uD558\\uAE30 \\uC0BD\\uC785\", /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",\n        onClick: () => {\n          navigate(\"/\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PostWritePage, \"At3MwCX9NlSff0oPYOYRZaVjedE=\", false, function () {\n  return [useNavigate];\n});\n_c3 = PostWritePage;\nexport default PostWritePage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"PostWritePage\");","map":{"version":3,"names":["React","useState","useNavigate","styled","TextInput","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","Container","_c2","Title","h2","PostWritePage","props","_s","navigate","title","setTitle","children","height","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","_c3","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostWritePage.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;\n\n// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props) {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  return (\n    <Wrapper>\n        <Container>\n            // 실제 화면에 나타나는 부분은 textInput 컴포넌트를 사용하여 글의 제목과 내용을 각각 입력받을 수 있도록 구현\n            <TextInput \n                height={20}\n                value={title}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n\n            <TextInput\n                height={480}\n                value={content}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n            // 화면 하단에는 버튼 컴포넌트를 사용해서 글 작성하기 삽입\n            <Button\n                title=\"글 작성하기\"\n                onClick={() => {\n                    navigate(\"/\");\n                }}\n            />\n        </Container>\n    </Wrapper>\n  );\n}\n\nexport default PostWritePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,OAAO;AAUb,MAAMG,SAAS,GAAGR,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,SAAS;AAUf,MAAME,KAAK,GAAGV,MAAM,CAACW,EAAE;AACvB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,oBACEM,OAAA,CAACC,OAAO;IAAAa,QAAA,eACJd,OAAA,CAACI,SAAS;MAAAU,QAAA,GAAC,kRAEP,eAAAd,OAAA,CAACH,SAAS;QACNkB,MAAM,EAAE,EAAG;QACXC,KAAK,EAAEJ,KAAM;QACbK,QAAQ,EAAGC,KAAK,IAAK;UACjBL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;QAChC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEFvB,OAAA,CAACH,SAAS;QACNkB,MAAM,EAAE,GAAI;QACZC,KAAK,EAAEQ,OAAQ;QACfP,QAAQ,EAAGC,KAAK,IAAK;UACjBL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;QAChC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,8JAEF,eAAAvB,OAAA,CAACF,MAAM;QACHc,KAAK,EAAC,iCAAQ;QACda,OAAO,EAAEA,CAAA,KAAM;UACXd,QAAQ,CAAC,GAAG,CAAC;QACjB;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACb,EAAA,CAhCQF,aAAa;EAAA,QACHb,WAAW;AAAA;AAAA+B,GAAA,GADrBlB,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}