{"ast":null,"code":"import React from\"react\";import{useNavigate}from\"react-router-dom\";import styled from\"styled-components\";import PostList from\"../List/PostList\";import Button from\"../UI/Button\";import{data}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;const Container=styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;const Title=styled.h2`\n  font-size: 28px;\n  color: #333;\n`;// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\nfunction MainPage(props){const navigate=useNavigate();return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Button,{title:\"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",onClick:()=>{navigate(\"/post-write\");}}),/*#__PURE__*/_jsx(PostList,{posts:data,onClickItem:item=>{navigate(`/post/${item.id}`);}})]})});}export default MainPage;","map":{"version":3,"names":["React","useNavigate","styled","PostList","Button","data","jsx","_jsx","jsxs","_jsxs","Wrapper","div","Container","Title","h2","MainPage","props","navigate","children","title","onClick","posts","onClickItem","item","id"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/MainPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { data } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #333;\n`;\n\n// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\nfunction MainPage(props) {\n    const navigate = useNavigate();\n\n    return(\n        <Wrapper>\n            <Container>\n                <Button\n                    title=\"글 작성하기\"\n                    onClick={() => {\n                        navigate(\"/post-write\");\n                    }}\n                />\n\n                <PostList\n                    posts={data}\n                    onClickItem={(item) => {\n                        navigate(`/post/${item.id}`);\n                    }}\n                />\n            </Container>\n        </Wrapper>\n    );\n}\n\nexport default MainPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,OAAO,CAAGR,MAAM,CAACS,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGV,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,KAAK,CAAGX,MAAM,CAACY,EAAE;AACvB;AACA;AACA,CAAC,CAED;AACA;AACA,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACrB,KAAM,CAAAC,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9B,mBACIM,IAAA,CAACG,OAAO,EAAAQ,QAAA,cACJT,KAAA,CAACG,SAAS,EAAAM,QAAA,eACNX,IAAA,CAACH,MAAM,EACHe,KAAK,CAAC,iCAAQ,CACdC,OAAO,CAAEA,CAAA,GAAM,CACXH,QAAQ,CAAC,aAAa,CAAC,CAC3B,CAAE,CACL,CAAC,cAEFV,IAAA,CAACJ,QAAQ,EACLkB,KAAK,CAAEhB,IAAK,CACZiB,WAAW,CAAGC,IAAI,EAAK,CACnBN,QAAQ,CAAC,SAASM,IAAI,CAACC,EAAE,EAAE,CAAC,CAChC,CAAE,CACL,CAAC,EACK,CAAC,CACP,CAAC,CAElB,CAEA,cAAe,CAAAT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}