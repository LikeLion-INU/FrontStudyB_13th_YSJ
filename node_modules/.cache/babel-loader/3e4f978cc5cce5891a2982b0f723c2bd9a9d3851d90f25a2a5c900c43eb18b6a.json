{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/List/PostList.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n// 앞에서 만든 PostListItem 컴포넌트를 사용하기 위해 import 진행\nimport PostListItem from \"./PostListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\n// 글 목록 렌더링\n_c = Wrapper;\nfunction PostList({\n  posts,\n  onClickItem\n}) {\n  if (!Array.isArray(posts)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostListItem, {\n      post: post,\n      onClick: () => onClickItem(post)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n/*\n// postList 컴포넌트의 프롭스로 받은 posts라는 배열에는 post 객체들이 들어있음\n// 이 post 배열의 map 함수를 이용하여 각 post 객체에 대해 postlist 컴포넌트를 만들어서 렌더링\nfunction PostList(props) {\n    const { posts, onClickItem } = props;\n\n    if (!Array.isArray(posts)) {\n        console.error(\"PostList 컴포넌트에 전달된 posts가 배열이 아닙니다:\", posts);\n        return null;\n    }\n\n    return (\n        <Wrapper>\n            {posts.map((post, index) => {\n                return (\n                    <PostListItem\n                        key={post.id}\n                        post={post}\n                        onClick={() => {\n                            onClickItem(post);\n                        }}\n                    />\n                );\n            })}\n        </Wrapper>\n    );\n}\n*/\n_c2 = PostList;\nexport default PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","styled","PostListItem","jsxDEV","_jsxDEV","Wrapper","div","_c","PostList","posts","onClickItem","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onClick","id","_c2","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/List/PostList.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n// 앞에서 만든 PostListItem 컴포넌트를 사용하기 위해 import 진행\nimport PostListItem from \"./PostListItem\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\n// 글 목록 렌더링\nfunction PostList({ posts, onClickItem }) {\n  if (!Array.isArray(posts)) return <div>게시글이 없습니다.</div>;\n\n  return (\n    <Wrapper>\n      {posts.map((post) => (\n        <PostListItem key={post.id} post={post} onClick={() => onClickItem(post)} />\n      ))}\n    </Wrapper>\n  );\n}\n\n/*\n// postList 컴포넌트의 프롭스로 받은 posts라는 배열에는 post 객체들이 들어있음\n// 이 post 배열의 map 함수를 이용하여 각 post 객체에 대해 postlist 컴포넌트를 만들어서 렌더링\nfunction PostList(props) {\n    const { posts, onClickItem } = props;\n\n    if (!Array.isArray(posts)) {\n        console.error(\"PostList 컴포넌트에 전달된 posts가 배열이 아닙니다:\", posts);\n        return null;\n    }\n\n    return (\n        <Wrapper>\n            {posts.map((post, index) => {\n                return (\n                    <PostListItem\n                        key={post.id}\n                        post={post}\n                        onClick={() => {\n                            onClickItem(post);\n                        }}\n                    />\n                );\n            })}\n        </Wrapper>\n    );\n}\n*/\n\nexport default PostList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAZMF,OAAO;AAab,SAASG,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,EAAE;EACxC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE,oBAAOL,OAAA;IAAAS,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvD,oBACEb,OAAA,CAACC,OAAO;IAAAQ,QAAA,EACLJ,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdf,OAAA,CAACF,YAAY;MAAeiB,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAACS,IAAI;IAAE,GAAtDA,IAAI,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAC5E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BAK,GAAA,GAZSd,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}