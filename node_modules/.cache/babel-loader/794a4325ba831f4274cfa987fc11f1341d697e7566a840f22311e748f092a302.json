{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostWritePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n_c2 = Container;\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;\n\n// 새 글 작성 또는 글 수정\nfunction PostWritePage({\n  onSubmit,\n  editingPost\n}) {\n  _s();\n  const [title, setTitle] = useState((editingPost === null || editingPost === void 0 ? void 0 : editingPost.title) || \"\");\n  const [content, setContent] = useState((editingPost === null || editingPost === void 0 ? void 0 : editingPost.content) || \"\");\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        height: 20,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        height: 480,\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: editingPost ? \"수정 완료\" : \"글 작성하기\",\n        onClick: () => {\n          onSubmit({\n            id: editingPost === null || editingPost === void 0 ? void 0 : editingPost.id,\n            title,\n            content\n          });\n          navigate(\"/\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n/*  \n// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props) {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  \n  return (\n    <Wrapper>\n        <Container>\n            // 실제 화면에 나타나는 부분은 textInput 컴포넌트를 사용하여 글의 제목과 내용을 각각 입력받을 수 있도록 구현\n            <TextInput \n                height={20}\n                value={title}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n\n            <TextInput\n                height={480}\n                value={content}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n            // 화면 하단에는 버튼 컴포넌트를 사용해서 글 작성하기 삽입\n            <Button\n                title=\"글 작성하기\"\n                onClick={() => {\n                    navigate(\"/\");\n                }}\n            />\n        </Container>\n    </Wrapper>\n  );\n}\n*/\n_s(PostWritePage, \"Jw0DZPoq4lX45IJ8EJlbpLxY1WM=\", false, function () {\n  return [useNavigate];\n});\n_c3 = PostWritePage;\nexport default PostWritePage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"PostWritePage\");","map":{"version":3,"names":["React","useState","useNavigate","styled","TextInput","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","Container","_c2","Title","h2","PostWritePage","onSubmit","editingPost","_s","title","setTitle","content","setContent","navigate","children","height","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c3","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostWritePage.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;\n\n// 새 글 작성 또는 글 수정\nfunction PostWritePage({ onSubmit, editingPost }) {\n    const [title, setTitle] = useState(editingPost?.title || \"\");\n    const [content, setContent] = useState(editingPost?.content || \"\");\n    const navigate = useNavigate();\n  \n    return (\n      <Wrapper>\n        <Container>\n          <TextInput height={20} value={title} onChange={(e) => setTitle(e.target.value)} />\n          <TextInput height={480} value={content} onChange={(e) => setContent(e.target.value)} />\n  \n          <Button\n            title={editingPost ? \"수정 완료\" : \"글 작성하기\"}\n            onClick={() => {\n              onSubmit({ id: editingPost?.id, title, content });\n              navigate(\"/\");\n            }}\n          />\n        </Container>\n      </Wrapper>\n    );\n  }\n\n/*  \n// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props) {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  \n  return (\n    <Wrapper>\n        <Container>\n            // 실제 화면에 나타나는 부분은 textInput 컴포넌트를 사용하여 글의 제목과 내용을 각각 입력받을 수 있도록 구현\n            <TextInput \n                height={20}\n                value={title}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n\n            <TextInput\n                height={480}\n                value={content}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n            // 화면 하단에는 버튼 컴포넌트를 사용해서 글 작성하기 삽입\n            <Button\n                title=\"글 작성하기\"\n                onClick={() => {\n                    navigate(\"/\");\n                }}\n            />\n        </Container>\n    </Wrapper>\n  );\n}\n*/\n\nexport default PostWritePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}