{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostViewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport CommentList from \"../List/CommentList\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 16px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n  width: 100%;\n  max-width: 720px;\n`;\n_c2 = Container;\nconst PostContainer = styled.div`\n  padding: 16px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 20px;\n`;\n_c3 = PostContainer;\nconst TitleText = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n`;\n_c4 = TitleText;\nconst ContentText = styled.p`\n  font-size: 18px;\n  margin-top: 12px;\n  white-space: pre-wrap;\n`;\n_c5 = ContentText;\nconst CommentLabel = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 12px 0 8px;\n`;\n\n// postViewPage 컴포넌트에서는 먼저 프롭스로 전달받은 글의 ID를 이용해서 전체 데이터에서 해당하는 글을 찾음\n// 그리고 찾은 글의 제목, 내용, 댓글을 렌더링하게 되고 그 아래에는 TextInput 컴포넌트와 Button 컴포넌트를 이용해 댓글을 작성할 수 있도록 UI 제공\n_c6 = CommentLabel;\nfunction PostViewPage({\n  posts,\n  onDeletePost,\n  onUpdatePost,\n  onAddComment,\n  onDeleteComment\n}) {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [comment, setComment] = useState(\"\");\n  const post = posts.find(p => p.id === Number(postId));\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uB4A4\\uB85C \\uAC00\\uAE30\",\n        onClick: () => navigate(\"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleText, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentText, {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uC218\\uC815\\uD558\\uAE30\",\n        onClick: () => {\n          onUpdatePost(post);\n          navigate(\"/post-write\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n        onClick: () => {\n          onDeletePost(post.id);\n          navigate(\"/\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentLabel, {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n        comments: post.comments,\n        onDeleteComment: commentId => onDeleteComment(post.id, commentId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        height: 40,\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uB313\\uAE00 \\uC791\\uC131\",\n        onClick: () => {\n          if (comment.trim() !== \"\") {\n            onAddComment(post.id, comment);\n            setComment(\"\");\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(PostViewPage, \"SUu0ahujZwBjP4mVobygtqsninU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c7 = PostViewPage;\nexport default PostViewPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"PostContainer\");\n$RefreshReg$(_c4, \"TitleText\");\n$RefreshReg$(_c5, \"ContentText\");\n$RefreshReg$(_c6, \"CommentLabel\");\n$RefreshReg$(_c7, \"PostViewPage\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","styled","CommentList","TextInput","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","Container","_c2","PostContainer","_c3","TitleText","h2","_c4","ContentText","p","_c5","CommentLabel","_c6","PostViewPage","posts","onDeletePost","onUpdatePost","onAddComment","onDeleteComment","_s","postId","navigate","comment","setComment","post","find","id","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","content","comments","commentId","height","value","onChange","e","target","trim","_c7","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostViewPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport CommentList from \"../List/CommentList\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\n\nconst Wrapper = styled.div`\n  padding: 16px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 720px;\n`;\n\nconst PostContainer = styled.div`\n  padding: 16px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 20px;\n`;\n\nconst TitleText = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst ContentText = styled.p`\n  font-size: 18px;\n  margin-top: 12px;\n  white-space: pre-wrap;\n`;\n\nconst CommentLabel = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 12px 0 8px;\n`;\n\n// postViewPage 컴포넌트에서는 먼저 프롭스로 전달받은 글의 ID를 이용해서 전체 데이터에서 해당하는 글을 찾음\n// 그리고 찾은 글의 제목, 내용, 댓글을 렌더링하게 되고 그 아래에는 TextInput 컴포넌트와 Button 컴포넌트를 이용해 댓글을 작성할 수 있도록 UI 제공\nfunction PostViewPage({\n  posts,\n  onDeletePost,\n  onUpdatePost,\n  onAddComment,\n  onDeleteComment,\n}) {\n  const { postId } = useParams();\n  const navigate = useNavigate();\n  const [comment, setComment] = useState(\"\");\n\n  const post = posts.find((p) => p.id === Number(postId));\n\n  if (!post) return <div>해당 게시글이 존재하지 않습니다.</div>;\n\n  return (\n    <Wrapper>\n      <Container>\n        <Button title=\"뒤로 가기\" onClick={() => navigate(\"/\")} />\n\n        <PostContainer>\n          <TitleText>{post.title}</TitleText>\n          <ContentText>{post.content}</ContentText>\n        </PostContainer>\n\n        <Button title=\"수정하기\" onClick={() => {\n          onUpdatePost(post);\n          navigate(\"/post-write\");\n        }} />\n\n        <Button title=\"삭제하기\" onClick={() => {\n          onDeletePost(post.id);\n          navigate(\"/\");\n        }} />\n\n        <CommentLabel>댓글</CommentLabel>\n        <CommentList\n          comments={post.comments}\n          onDeleteComment={(commentId) => onDeleteComment(post.id, commentId)}\n        />\n\n        <TextInput\n          height={40}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n\n        <Button\n          title=\"댓글 작성\"\n          onClick={() => {\n            if (comment.trim() !== \"\") {\n              onAddComment(post.id, comment);\n              setComment(\"\");\n            }\n          }}\n        />\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default PostViewPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}