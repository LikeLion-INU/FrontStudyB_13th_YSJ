{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { data } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n_c2 = Container;\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #333;\n`;\n\n// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\n_c3 = Title;\nfunction MainPage(props) {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC2B9\\uC9C0\\uC758 \\uBBF8\\uB2C8 \\uBE14\\uB85C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",\n        onClick: () => {\n          navigate(\"/post-write\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: data,\n        onClickItem: item => {\n          navigate(`/post/${item.id}`);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c4 = MainPage;\nexport default MainPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"MainPage\");","map":{"version":3,"names":["React","useNavigate","styled","PostList","Button","data","jsxDEV","_jsxDEV","Wrapper","div","_c","Container","_c2","Title","h2","_c3","MainPage","props","_s","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","posts","onClickItem","item","id","_c4","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/MainPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { data } from \"../data/data\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #333;\n`;\n\n// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\nfunction MainPage(props) {\n    const navigate = useNavigate();\n\n    return(\n        <Wrapper>\n            <Container>\n                <Title>승지의 미니 블로그</Title>\n                <Button\n                    title=\"글 작성하기\"\n                    onClick={() => {\n                        navigate(\"/post-write\");\n                    }}\n                />\n\n                <PostList\n                    posts={data}\n                    onClickItem={(item) => {\n                        navigate(`/post/${item.id}`);\n                    }}\n                />\n            </Container>\n        </Wrapper>\n    );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,OAAO;AAUb,MAAMG,SAAS,GAAGT,MAAM,CAACO,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,SAAS;AAUf,MAAME,KAAK,GAAGX,MAAM,CAACY,EAAE;AACvB;AACA;AACA,CAAC;;AAED;AACA;AAAAC,GAAA,GANMF,KAAK;AAOX,SAASG,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,oBACIM,OAAA,CAACC,OAAO;IAAAY,QAAA,eACJb,OAAA,CAACI,SAAS;MAAAS,QAAA,gBACNb,OAAA,CAACM,KAAK;QAAAO,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBjB,OAAA,CAACH,MAAM;QACHqB,KAAK,EAAC,iCAAQ;QACdC,OAAO,EAAEA,CAAA,KAAM;UACXP,QAAQ,CAAC,aAAa,CAAC;QAC3B;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEFjB,OAAA,CAACJ,QAAQ;QACLwB,KAAK,EAAEtB,IAAK;QACZuB,WAAW,EAAGC,IAAI,IAAK;UACnBV,QAAQ,CAAC,SAASU,IAAI,CAACC,EAAE,EAAE,CAAC;QAChC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAElB;AAACN,EAAA,CAvBQF,QAAQ;EAAA,QACIf,WAAW;AAAA;AAAA8B,GAAA,GADvBf,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}