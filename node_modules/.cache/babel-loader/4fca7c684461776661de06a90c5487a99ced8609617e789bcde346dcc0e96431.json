{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MainPage from \"./components/pages/MainPage\";\nimport PostWritePage from \"./components/pages/PostWritePage\";\nimport PostViewPage from \"./components/pages/PostViewPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainTitleText = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  color : white;\n  background-color: skyblue;\n  padding: 10px;\n  // border-radius: 8px;\n`;\n_c = MainTitleText;\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const handleAddPost = ({\n    title,\n    content\n  }) => {\n    const newPost = {\n      id: Date.now(),\n      title,\n      content,\n      comments: []\n    };\n    setPosts([...posts, newPost]);\n  };\n  const handleUpdatePost = updatedPost => {\n    setEditingPost(updatedPost);\n  };\n  const handleSubmitPost = ({\n    id,\n    title,\n    content\n  }) => {\n    if (id) {\n      setPosts(posts.map(p => p.id === id ? {\n        ...p,\n        title,\n        content\n      } : p));\n    } else {\n      handleAddPost({\n        title,\n        content\n      });\n    }\n    setEditingPost(null);\n  };\n  const handleDeletePost = postId => {\n    setPosts(posts.filter(p => p.id !== postId));\n  };\n  const handleAddComment = (postId, content) => {\n    setPosts(posts.map(post => post.id === postId ? {\n      ...post,\n      comments: [...post.comments, {\n        id: Date.now(),\n        content\n      }]\n    } : post));\n  };\n  const handleDeleteComment = (postId, commentId) => {\n    setPosts(posts.map(post => post.id === postId ? {\n      ...post,\n      comments: post.comments.filter(c => c.id !== commentId)\n    } : post));\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(MainTitleText, {\n      children: \"\\uC2B9\\uC9C0\\uC758 \\uBBF8\\uB2C8 \\uBE14\\uB85C\\uADF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post-write\",\n        element: /*#__PURE__*/_jsxDEV(PostWritePage, {\n          onSubmit: handleSubmitPost,\n          editingPost: editingPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post/:postId\",\n        element: /*#__PURE__*/_jsxDEV(PostViewPage, {\n          posts: posts,\n          onDeletePost: handleDeletePost,\n          onUpdatePost: handleUpdatePost,\n          onAddComment: handleAddComment,\n          onDeleteComment: handleDeleteComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wCFVqEUfcG8nLVt7RCRWYR5DB8U=\");\n_c2 = App;\nexport default App;\n\n/*\n// 마지막에 :(콜론)postId는 동적으로 변하는 파라미터를 위한 값이다.\n// 콜론과 id를 사용하면 실제 컴포넌트에서는 useParams를 사용해 아이디로 해당 값을 가져올 수 있다고 한다.\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <MainTitleText>승지의 미니 블로그</MainTitleText>\n      <Routes>\n      <Route index element={<MainPage />} />\n        <Route path=\"post-write\" element={<PostWritePage />} />\n        <Route path=\"post/:postId\" element={<PostViewPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"MainTitleText\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","styled","MainPage","PostWritePage","PostViewPage","jsxDEV","_jsxDEV","MainTitleText","p","_c","App","_s","posts","setPosts","editingPost","setEditingPost","handleAddPost","title","content","newPost","id","Date","now","comments","handleUpdatePost","updatedPost","handleSubmitPost","map","handleDeletePost","postId","filter","handleAddComment","post","handleDeleteComment","commentId","c","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSubmit","onDeletePost","onUpdatePost","onAddComment","onDeleteComment","_c2","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MainPage from \"./components/pages/MainPage\";\nimport PostWritePage from \"./components/pages/PostWritePage\";\nimport PostViewPage from \"./components/pages/PostViewPage\";\n\nconst MainTitleText = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  color : white;\n  background-color: skyblue;\n  padding: 10px;\n  // border-radius: 8px;\n`;\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n\n  const handleAddPost = ({ title, content }) => {\n    const newPost = { id: Date.now(), title, content, comments: [] };\n    setPosts([...posts, newPost]);\n  };\n\n  const handleUpdatePost = (updatedPost) => {\n    setEditingPost(updatedPost);\n  };\n\n  const handleSubmitPost = ({ id, title, content }) => {\n    if (id) {\n      setPosts(posts.map((p) => (p.id === id ? { ...p, title, content } : p)));\n    } else {\n      handleAddPost({ title, content });\n    }\n    setEditingPost(null);\n  };\n\n  const handleDeletePost = (postId) => {\n    setPosts(posts.filter((p) => p.id !== postId));\n  };\n\n  const handleAddComment = (postId, content) => {\n    setPosts(posts.map((post) =>\n      post.id === postId ? {\n        ...post,\n        comments: [...post.comments, { id: Date.now(), content }],\n      } : post\n    ));\n  };\n\n  const handleDeleteComment = (postId, commentId) => {\n    setPosts(posts.map((post) =>\n      post.id === postId ? {\n        ...post,\n        comments: post.comments.filter((c) => c.id !== commentId),\n      } : post\n    ));\n  };\n\n  return (\n    <BrowserRouter>\n      <MainTitleText>승지의 미니 블로그</MainTitleText>\n      <Routes>\n        <Route path=\"/\" element={\n          <MainPage posts={posts} />\n        } />\n        <Route path=\"/post-write\" element={\n          <PostWritePage onSubmit={handleSubmitPost} editingPost={editingPost} />\n        } />\n        <Route path=\"/post/:postId\" element={\n          <PostViewPage\n            posts={posts}\n            onDeletePost={handleDeletePost}\n            onUpdatePost={handleUpdatePost}\n            onAddComment={handleAddComment}\n            onDeleteComment={handleDeleteComment}\n          />\n        } />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n/*\n// 마지막에 :(콜론)postId는 동적으로 변하는 파라미터를 위한 값이다.\n// 콜론과 id를 사용하면 실제 컴포넌트에서는 useParams를 사용해 아이디로 해당 값을 가져올 수 있다고 한다.\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <MainTitleText>승지의 미니 블로그</MainTitleText>\n      <Routes>\n      <Route index element={<MainPage />} />\n        <Route path=\"post-write\" element={<PostWritePage />} />\n        <Route path=\"post/:postId\" element={<PostViewPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,YAAY,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGN,MAAM,CAACO,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,aAAa;AAUnB,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMmB,aAAa,GAAGA,CAAC;IAAEC,KAAK;IAAEC;EAAQ,CAAC,KAAK;IAC5C,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEL,KAAK;MAAEC,OAAO;MAAEK,QAAQ,EAAE;IAAG,CAAC;IAChEV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMK,gBAAgB,GAAIC,WAAW,IAAK;IACxCV,cAAc,CAACU,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAC;IAAEN,EAAE;IAAEH,KAAK;IAAEC;EAAQ,CAAC,KAAK;IACnD,IAAIE,EAAE,EAAE;MACNP,QAAQ,CAACD,KAAK,CAACe,GAAG,CAAEnB,CAAC,IAAMA,CAAC,CAACY,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGZ,CAAC;QAAES,KAAK;QAAEC;MAAQ,CAAC,GAAGV,CAAE,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLQ,aAAa,CAAC;QAAEC,KAAK;QAAEC;MAAQ,CAAC,CAAC;IACnC;IACAH,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMa,gBAAgB,GAAIC,MAAM,IAAK;IACnChB,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAAEtB,CAAC,IAAKA,CAAC,CAACY,EAAE,KAAKS,MAAM,CAAC,CAAC;EAChD,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACF,MAAM,EAAEX,OAAO,KAAK;IAC5CL,QAAQ,CAACD,KAAK,CAACe,GAAG,CAAEK,IAAI,IACtBA,IAAI,CAACZ,EAAE,KAAKS,MAAM,GAAG;MACnB,GAAGG,IAAI;MACPT,QAAQ,EAAE,CAAC,GAAGS,IAAI,CAACT,QAAQ,EAAE;QAAEH,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEJ;MAAQ,CAAC;IAC1D,CAAC,GAAGc,IACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACJ,MAAM,EAAEK,SAAS,KAAK;IACjDrB,QAAQ,CAACD,KAAK,CAACe,GAAG,CAAEK,IAAI,IACtBA,IAAI,CAACZ,EAAE,KAAKS,MAAM,GAAG;MACnB,GAAGG,IAAI;MACPT,QAAQ,EAAES,IAAI,CAACT,QAAQ,CAACO,MAAM,CAAEK,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKc,SAAS;IAC1D,CAAC,GAAGF,IACN,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1B,OAAA,CAACR,aAAa;IAAAsC,QAAA,gBACZ9B,OAAA,CAACC,aAAa;MAAA6B,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eACzClC,OAAA,CAACP,MAAM;MAAAqC,QAAA,gBACL9B,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,GAAG;QAACC,OAAO,eACrBpC,OAAA,CAACJ,QAAQ;UAACU,KAAK,EAAEA;QAAM;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACJlC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,aAAa;QAACC,OAAO,eAC/BpC,OAAA,CAACH,aAAa;UAACwC,QAAQ,EAAEjB,gBAAiB;UAACZ,WAAW,EAAEA;QAAY;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACJlC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,eAAe;QAACC,OAAO,eACjCpC,OAAA,CAACF,YAAY;UACXQ,KAAK,EAAEA,KAAM;UACbgC,YAAY,EAAEhB,gBAAiB;UAC/BiB,YAAY,EAAErB,gBAAiB;UAC/BsB,YAAY,EAAEf,gBAAiB;UAC/BgB,eAAe,EAAEd;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAAC7B,EAAA,CAlEQD,GAAG;AAAAsC,GAAA,GAAHtC,GAAG;AAoEZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA,IAAAD,EAAA,EAAAuC,GAAA;AAAAC,YAAA,CAAAxC,EAAA;AAAAwC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}