{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MainPage from \"./components/pages/MainPage\";\nimport PostWritePage from \"./components/pages/PostWritePage\";\nimport PostViewPage from \"./components/pages/PostViewPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainTitleText = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\n// 마지막에 :(콜론)postId는 동적으로 변하는 파라미터를 위한 값이다.\n// 콜론과 id를 사용하면 실제 컴포넌트에서는 useParams를 사용해 아이디로 해당 값을 가져올 수 있다고 한다.\n_c = MainTitleText;\nfunction App(props) {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(MainTitleText, {\n      children: \"\\uC2B9\\uC9C0\\uC758 \\uBBF8\\uB2C8 \\uBE14\\uB85C\\uADF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"post-write\",\n        element: /*#__PURE__*/_jsxDEV(PostWritePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"post/:postId\",\n        element: /*#__PURE__*/_jsxDEV(PostViewPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainTitleText\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","styled","MainPage","PostWritePage","PostViewPage","jsxDEV","_jsxDEV","MainTitleText","p","_c","App","props","children","fileName","_jsxFileName","lineNumber","columnNumber","index","element","path","_c2","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MainPage from \"./components/pages/MainPage\";\nimport PostWritePage from \"./components/pages/PostWritePage\";\nimport PostViewPage from \"./components/pages/PostViewPage\";\n\nconst MainTitleText = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\n// 마지막에 :(콜론)postId는 동적으로 변하는 파라미터를 위한 값이다.\n// 콜론과 id를 사용하면 실제 컴포넌트에서는 useParams를 사용해 아이디로 해당 값을 가져올 수 있다고 한다.\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <MainTitleText>승지의 미니 블로그</MainTitleText>\n      <Routes>\n      <Route index element={<MainPage />} />\n        <Route path=\"post-write\" element={<PostWritePage />} />\n        <Route path=\"post/:postId\" element={<PostViewPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,YAAY,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGN,MAAM,CAACO,CAAC;AAC9B;AACA;AACA;AACA,CAAC;;AAED;AACA;AAAAC,EAAA,GAPMF,aAAa;AAQnB,SAASG,GAAGA,CAACC,KAAK,EAAE;EAClB,oBACEL,OAAA,CAACR,aAAa;IAAAc,QAAA,gBACZN,OAAA,CAACC,aAAa;MAAAK,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eACzCV,OAAA,CAACP,MAAM;MAAAa,QAAA,gBACPN,OAAA,CAACN,KAAK;QAACiB,KAAK;QAACC,OAAO,eAAEZ,OAAA,CAACJ,QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCV,OAAA,CAACN,KAAK;QAACmB,IAAI,EAAC,YAAY;QAACD,OAAO,eAAEZ,OAAA,CAACH,aAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDV,OAAA,CAACN,KAAK;QAACmB,IAAI,EAAC,cAAc;QAACD,OAAO,eAAEZ,OAAA,CAACF,YAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACI,GAAA,GAXQV,GAAG;AAaZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}