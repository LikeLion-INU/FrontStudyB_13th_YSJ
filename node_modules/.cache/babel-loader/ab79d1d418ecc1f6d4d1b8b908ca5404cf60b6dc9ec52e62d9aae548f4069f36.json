{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/MainPage.jsx\",\n  _s = $RefreshSig$();\n/*\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { data } from \"../data/data\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\n// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\nfunction MainPage(props) {\n    const navigate = useNavigate();\n\n    return(\n        <Wrapper>\n            <Container>\n                <Button\n                    title=\"글 작성하기\"\n                    onClick={() => {\n                        navigate(\"/post-write\");\n                    }}\n                />\n\n                <PostList\n                    posts={data}\n                    onClickItem={(item) => {\n                        navigate(`/post/${item.id}`);\n                    }}\n                />\n            </Container>\n        </Wrapper>\n    );\n}\n\nexport default MainPage;\n*/\n\n// 글 목록 보기, 글 작성 페이지 이동\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n  width: 100%;\n  max-width: 720px;\n`;\n_c2 = Container;\nconst Title = styled.h2`\n  font-size: 28px;\n  font-weight: bold;\n  color: #333;\n`;\n_c3 = Title;\nfunction MainPage({\n  posts,\n  onClickPost\n}) {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uBE14\\uB85C\\uADF8 \\uAE00 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",\n        onClick: () => navigate(\"/post-write\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts,\n        onClickItem: onClickPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c4 = MainPage;\nexport default MainPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","PostList","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","Container","_c2","Title","h2","_c3","MainPage","posts","onClickPost","_s","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","onClickItem","_c4","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/MainPage.jsx"],"sourcesContent":["/*\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\nimport { data } from \"../data/data\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\n// 페이지 이동을 위해 리액트 라우터 돔에 useNavigate 훅 사용\n// mainpage 컴포넌트의 구조는 기존에 만들어 두었던 컴포넌트들을 모아놓은 수준으로 굉장히 단순한데, 이것이 바로 컴포넌트 기반으로 개발하는 리액트의 장점\nfunction MainPage(props) {\n    const navigate = useNavigate();\n\n    return(\n        <Wrapper>\n            <Container>\n                <Button\n                    title=\"글 작성하기\"\n                    onClick={() => {\n                        navigate(\"/post-write\");\n                    }}\n                />\n\n                <PostList\n                    posts={data}\n                    onClickItem={(item) => {\n                        navigate(`/post/${item.id}`);\n                    }}\n                />\n            </Container>\n        </Wrapper>\n    );\n}\n\nexport default MainPage;\n*/\n\n// 글 목록 보기, 글 작성 페이지 이동\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostList from \"../List/PostList\";\nimport Button from \"../UI/Button\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 720px;\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  font-weight: bold;\n  color: #333;\n`;\n\n\nfunction MainPage({ posts, onClickPost }) {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Container>\n        <Title>블로그 글 목록</Title>\n        <Button title=\"글 작성하기\" onClick={() => navigate(\"/post-write\")} />\n        <PostList posts={posts} onClickItem={onClickPost} />\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default MainPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAG;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,OAAO;AAOb,MAAMG,SAAS,GAAGR,MAAM,CAACM,GAAG;AAC5B;AACA;AACA,CAAC;AAACG,GAAA,GAHID,SAAS;AAKf,MAAME,KAAK,GAAGV,MAAM,CAACW,EAAE;AACvB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAOX,SAASG,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,oBACEK,OAAA,CAACC,OAAO;IAAAa,QAAA,eACNd,OAAA,CAACI,SAAS;MAAAU,QAAA,gBACRd,OAAA,CAACM,KAAK;QAAAQ,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlB,OAAA,CAACF,MAAM;QAACqB,KAAK,EAAC,iCAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC,aAAa;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjElB,OAAA,CAACH,QAAQ;QAACa,KAAK,EAAEA,KAAM;QAACW,WAAW,EAAEV;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACN,EAAA,CAZQH,QAAQ;EAAA,QACEd,WAAW;AAAA;AAAA2B,GAAA,GADrBb,QAAQ;AAcjB,eAAeA,QAAQ;AAAC,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}