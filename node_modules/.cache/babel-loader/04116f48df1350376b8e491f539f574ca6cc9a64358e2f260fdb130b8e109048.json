{"ast":null,"code":"var _jsxFileName = \"/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/List/CommentList.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport CommentListItem from \"./CommentListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n_c = Wrapper;\nfunction CommentList({\n  comments,\n  onDeleteComment\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentListItem, {\n      comment: comment,\n      onDelete: () => onDeleteComment(comment.id)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n\n/*\n// commentList라는 이름의 함수 컴포넌트를 만들고 이 컴포넌트의 프롭스로는 comments라는 배열이 들어옴\n// 이 배열에는 comment 객체들이 들어있으며, 이 배열에 map 함수를 사용해서 각 댓글 객체를 commentListItem 컴포넌트로 넘겨 화면에 표시\nfunction CommentList(props) {\n    const { comments } = props;\n\n    return (\n        <Wrapper>\n            {comments.map((comment, index) => {\n                return <CommentListItem key={comment.id} comment={comment} />;\n            })}\n        </Wrapper>\n    );\n}\n*/\n_c2 = CommentList;\nexport default CommentList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CommentList\");","map":{"version":3,"names":["React","styled","CommentListItem","jsxDEV","_jsxDEV","Wrapper","div","_c","CommentList","comments","onDeleteComment","children","map","comment","onDelete","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/List/CommentList.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport CommentListItem from \"./CommentListItem\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nfunction CommentList({ comments, onDeleteComment }) {\n    return (\n      <Wrapper>\n        {comments.map((comment) => (\n          <CommentListItem\n            key={comment.id}\n            comment={comment}\n            onDelete={() => onDeleteComment(comment.id)}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n  \n/*\n// commentList라는 이름의 함수 컴포넌트를 만들고 이 컴포넌트의 프롭스로는 comments라는 배열이 들어옴\n// 이 배열에는 comment 객체들이 들어있으며, 이 배열에 map 함수를 사용해서 각 댓글 객체를 commentListItem 컴포넌트로 넘겨 화면에 표시\nfunction CommentList(props) {\n    const { comments } = props;\n\n    return (\n        <Wrapper>\n            {comments.map((comment, index) => {\n                return <CommentListItem key={comment.id} comment={comment} />;\n            })}\n        </Wrapper>\n    );\n}\n*/\n\nexport default CommentList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,OAAO;AAYb,SAASG,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAChD,oBACEN,OAAA,CAACC,OAAO;IAAAM,QAAA,EACLF,QAAQ,CAACG,GAAG,CAAEC,OAAO,iBACpBT,OAAA,CAACF,eAAe;MAEdW,OAAO,EAAEA,OAAQ;MACjBC,QAAQ,EAAEA,CAAA,KAAMJ,eAAe,CAACG,OAAO,CAACE,EAAE;IAAE,GAFvCF,OAAO,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdAC,GAAA,GAdSZ,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}