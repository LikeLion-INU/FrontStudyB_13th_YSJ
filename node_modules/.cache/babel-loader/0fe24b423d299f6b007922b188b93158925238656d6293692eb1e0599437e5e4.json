{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import styled from\"styled-components\";import TextInput from\"../UI/TextInput\";import Button from\"../UI/Button\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wrapper=styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;const Container=styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;const Title=styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props){const navigate=useNavigate();const[title,setTitle]=useState(\"\");return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Container,{children:[\"// \\uC2E4\\uC81C \\uD654\\uBA74\\uC5D0 \\uB098\\uD0C0\\uB098\\uB294 \\uBD80\\uBD84\\uC740 textInput \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uAE00\\uC758 \\uC81C\\uBAA9\\uACFC \\uB0B4\\uC6A9\\uC744 \\uAC01\\uAC01 \\uC785\\uB825\\uBC1B\\uC744 \\uC218 \\uC788\\uB3C4\\uB85D \\uAD6C\\uD604\",/*#__PURE__*/_jsx(TextInput,{height:20,value:title,onChange:event=>{setTitle(event.target.value);}}),/*#__PURE__*/_jsx(TextInput,{height:480,value:content,onChange:event=>{setTitle(event.target.value);}}),\"// \\uD654\\uBA74 \\uD558\\uB2E8\\uC5D0\\uB294 \\uBC84\\uD2BC \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C \\uAE00 \\uC791\\uC131\\uD558\\uAE30 \\uC0BD\\uC785\",/*#__PURE__*/_jsx(Button,{title:\"\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",onClick:()=>{navigate(\"/\");}})]})});}export default PostWritePage;","map":{"version":3,"names":["React","useState","useNavigate","styled","TextInput","Button","jsx","_jsx","jsxs","_jsxs","Wrapper","div","Container","Title","h2","PostWritePage","props","navigate","title","setTitle","children","height","value","onChange","event","target","content","onClick"],"sources":["/Users/yunseungji/Desktop/MiniBlog/mini-blog/src/components/pages/PostWritePage.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TextInput from \"../UI/TextInput\";\nimport Button from \"../UI/Button\";\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  width: calc(100% - 32px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 720px;\n    & > * {\n        :not(:last-child) {\n            margin-bottom: 16px;\n        }\n    }\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  color: #2d6cdf;\n`;\n\n// postwritepage 컴포넌트는 두 개의 state를 가지고 있음\n// 하나는 글의 제목을 위한 state이고, 다른 하나는 글의 내용을 위한 state\n// 두 개의 state 모두 useState hook을 이용하여 선언\nfunction PostWritePage(props) {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  return (\n    <Wrapper>\n        <Container>\n            // 실제 화면에 나타나는 부분은 textInput 컴포넌트를 사용하여 글의 제목과 내용을 각각 입력받을 수 있도록 구현\n            <TextInput \n                height={20}\n                value={title}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n\n            <TextInput\n                height={480}\n                value={content}\n                onChange={(event) => {\n                    setTitle(event.target.value);\n                }}\n            />\n            // 화면 하단에는 버튼 컴포넌트를 사용해서 글 작성하기 삽입\n            <Button\n                title=\"글 작성하기\"\n                onClick={() => {\n                    navigate(\"/\");\n                }}\n            />\n        </Container>\n    </Wrapper>\n  );\n}\n\nexport default PostWritePage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,SAAS,KAAM,iBAAiB,CACvC,MAAO,CAAAC,MAAM,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,OAAO,CAAGP,MAAM,CAACQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGT,MAAM,CAACQ,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,KAAK,CAAGV,MAAM,CAACW,EAAE;AACvB;AACA;AACA,CAAC,CAED;AACA;AACA;AACA,QAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAC5B,KAAM,CAAAC,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,mBACEM,IAAA,CAACG,OAAO,EAAAU,QAAA,cACJX,KAAA,CAACG,SAAS,EAAAQ,QAAA,EAAC,kRAEP,cAAAb,IAAA,CAACH,SAAS,EACNiB,MAAM,CAAE,EAAG,CACXC,KAAK,CAAEJ,KAAM,CACbK,QAAQ,CAAGC,KAAK,EAAK,CACjBL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAChC,CAAE,CACL,CAAC,cAEFf,IAAA,CAACH,SAAS,EACNiB,MAAM,CAAE,GAAI,CACZC,KAAK,CAAEI,OAAQ,CACfH,QAAQ,CAAGC,KAAK,EAAK,CACjBL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAChC,CAAE,CACL,CAAC,6JAEF,cAAAf,IAAA,CAACF,MAAM,EACHa,KAAK,CAAC,iCAAQ,CACdS,OAAO,CAAEA,CAAA,GAAM,CACXV,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAE,CACL,CAAC,EACK,CAAC,CACP,CAAC,CAEd,CAEA,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}